{"version":3,"sources":["Producto.js","App.js","serviceWorker.js","index.js","TopMenu.js"],"names":["Producto","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","cantidad","comprar","bind","assertThisInitialized","console","log","setState","react_default","a","createElement","className","producto","nombre","onClick","id","Component","App","productos","_this2","fetch","then","res","json","map","t","src_Producto","renderProductos","Boolean","window","location","hostname","match","ReactDOM","render","href","data-toggle","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.caf456f1.chunk.js","sourcesContent":["import React, {Component} from \"react\";\n\n\nclass Producto extends Component{\n  constructor (props){\n    super(props);\n    this.state ={\n      cantidad: 0\n    }\n\n    this.comprar = this.comprar.bind(this);\n  }\n\n  comprar() {\n    console.log(\"Comprar\", this);\n    this.setState({\n      cantidad: this.state.cantidad + 1\n    });\n  }\n\n  render() {\n    return(\n      <div className=\"col-md-4\">\n        <div className=\"row infoProducto\">\n            {this.props.producto.nombre}\n        </div>\n        <div className=\"row\">\n          <button className=\"btn btn-primary\"\n            onClick={ this.comprar}>\n            Comprar\n          </button>\n        </div>\n        <div className=\"row\">\n          <span>\n            Cantidad:\n            <span id=\"compraValue\">\n              {this.state.cantidad}\n            </span>\n          </span>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Producto;","import React, {Component} from \"react\";\nimport Producto from \"./Producto.js\";\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      productos: []\n    }\n  }\n\n  componentDidMount(){\n    fetch(\"/productos\")\n      .then(res => res.json())\n      .then(productos => this.setState({\n        productos: productos\n      }));\n  }\n\n  renderProductos()\n  {\n    return this.state.productos.map(t => <Producto producto={t}></Producto>);\n  };\n\n  render() {\n  return(\n    <div className=\"container\">\n      <div>HolaMundo</div>\n      Columna 1\n      <div className =\"row\">\n        {this.renderProductos()}\n      </div>\n    </div>\n    )\n  }\n}\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport TopMenu from './TopMenu';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <div>\n    <TopMenu/>\n    <div className=\"container\">\n      <App/>\n    </div>\n  </div>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\n\nexport default () =>\n  <nav className=\"navbar navbar-inverse\">\n  <div className=\"container-fluid\">\n    <div className=\"navbar-header\">\n      <a className=\"navbar-brand\" href=\"#\">La Mhara</a>\n    </div>\n    <ul className=\"nav navbar-nav\">\n      <li className=\"active\"><a href=\"#\">Home</a></li>\n      <li className=\"dropdown\"><a className=\"dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\">Page 1 <span className=\"caret\"></span></a>\n        <ul className=\"dropdown-menu\">\n          <li><a href=\"#\">Page 1-1</a></li>\n          <li><a href=\"#\">Page 1-2</a></li>\n          <li><a href=\"#\">Page 1-3</a></li>\n        </ul>\n      </li>\n      <li><a href=\"#\">Page 2</a></li>\n    </ul>\n    <ul className=\"nav navbar-nav navbar-right\">\n      <li><a href=\"#\"><span className=\"glyphicon glyphicon-user\"></span> Sign Up</a></li>\n      <li><a href=\"#\"><span className=\"glyphicon glyphicon-log-in\"></span> Login</a></li>\n    </ul>\n  </div>\n</nav>"],"sourceRoot":""}